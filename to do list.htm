<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .container {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 300px;
            text-align: center;
        }

        h1 {
            margin-top: 0;
        }

        .input-group {
            display: flex;
            margin-bottom: 20px;
        }

        input[type="text"] {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px 0 0 5px;
        }

        button {
            padding: 10px;
            border: none;
            background: #28a745;
            color: white;
            border-radius: 0 5px 5px 0;
            cursor: pointer;
        }

        button:hover {
            background: #218838;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            background: #eee;
            margin: 5px 0;
            padding: 10px;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        li.completed {
            text-decoration: line-through;
        }

        li button {
            background: none;
            border: none;
            cursor: pointer;
            color: #dc3545;
            margin-left: 10px;
        }

        li button:hover {
            color: #c82333;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>To-Do List</h1>
        <div class="input-group">
            <input type="text" id="new-task" placeholder="Add a new task">
            <button id="add-task">Add</button>
        </div>
        <ul id="tasks"></ul>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const newTaskInput = document.getElementById('new-task');
            const addTaskButton = document.getElementById('add-task');
            const tasksList = document.getElementById('tasks');

            // Load tasks from local storage
            loadTasks();

            addTaskButton.addEventListener('click', () => {
                const taskText = newTaskInput.value.trim();
                if (taskText !== '') {
                    addTask(taskText);
                    newTaskInput.value = '';
                }
            });

            tasksList.addEventListener('click', (e) => {
                if (e.target.classList.contains('delete')) {
                    deleteTask(e.target.parentElement);
                } else if (e.target.classList.contains('edit')) {
                    editTask(e.target.parentElement);
                } else if (e.target.classList.contains('task')) {
                    toggleTaskCompletion(e.target);
                }
            });

            function addTask(taskText) {
                const taskItem = document.createElement('li');
                taskItem.className = 'task';
                taskItem.textContent = taskText;

                const editBtn = document.createElement('button');
                editBtn.className = 'edit';
                editBtn.textContent = 'Edit';

                const deleteBtn = document.createElement('button');
                deleteBtn.className = 'delete';
                deleteBtn.textContent = 'Delete';

                taskItem.appendChild(editBtn);
                taskItem.appendChild(deleteBtn);
                tasksList.appendChild(taskItem);

                saveTasks();
            }

            function deleteTask(taskItem) {
                taskItem.remove();
                saveTasks();
            }

            function editTask(taskItem) {
                const newText = prompt('Edit your task:', taskItem.firstChild.textContent);
                if (newText) {
                    taskItem.firstChild.textContent = newText;
                    saveTasks();
                }
            }

            function toggleTaskCompletion(taskItem) {
                taskItem.classList.toggle('completed');
                saveTasks();
            }

            function saveTasks() {
                const tasks = [];
                document.querySelectorAll('.task').forEach(taskItem => {
                    tasks.push({
                        text: taskItem.firstChild.textContent,
                        completed: taskItem.classList.contains('completed')
                    });
                });
                localStorage.setItem('tasks', JSON.stringify(tasks));
            }

            function loadTasks() {
                const tasks = JSON.parse(localStorage.getItem('tasks'));
                if (tasks) {
                    tasks.forEach(task => {
                        const taskItem = document.createElement('li');
                        taskItem.className = 'task';
                        taskItem.textContent = task.text;
                        if (task.completed) {
                            taskItem.classList.add('completed');
                        }

                        const editBtn = document.createElement('button');
                        editBtn.className = 'edit';
                        editBtn.textContent = 'Edit';

                        const deleteBtn = document.createElement('button');
                        deleteBtn.className = 'delete';
                        deleteBtn.textContent = 'Delete';

                        taskItem.appendChild(editBtn);
                        taskItem.appendChild(deleteBtn);
                        tasksList.appendChild(taskItem);
                    });
                }
            }
        });
    </script>
</body>
</html>